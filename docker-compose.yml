version: '3.7'

services:
  pgdb:
    image: ${IMAGE_REPO}/shepherd-pgdb:${TARGET:-prod}
    build: 
      context: ./postgres
    volumes: 
      - pgdata:/var/lib/postgresql/data
    environment: 
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: arblacklist
      PGDATA: /var/lib/postgresql/data/pgdata
    restart: always
  webserver:
    image: ${IMAGE_REPO}/shepherd-webserver:${TARGET:-prod}
    build: 
      context: .
      target: ${TARGET:-prod}
    environment: 
      DB_HOST: pgdb
      PROCESS_NAME: webserver
    depends_on: 
      - pgdb
    ports: 
      - '80:80'
    restart: always
  scanner:
    image: ${IMAGE_REPO}/shepherd-scanner:${TARGET:-prod}
    hostname: ${IMAGE_REPO}-shepherd-scanner
    build: 
      context: .
      target: prod
    environment: 
      DB_HOST: pgdb
      PROCESS_NAME: scanner
    depends_on: 
      - pgdb
    restart: always
  rating:
    image: ${IMAGE_REPO}/shepherd-rating:${TARGET:-prod}
    hostname: ${IMAGE_REPO}-shepherd-rating
    deploy:
      resources:
        limits:
          cpus: '4.0'
          memory: 30G
    build: 
      context: .
      target: prod
    environment: 
      DB_HOST: pgdb
      PROCESS_NAME: rating
      NODE_OPTIONS: '--max-old-space-size=8192'
    depends_on: 
      - pgdb
    restart: always
volumes:
  pgdata: