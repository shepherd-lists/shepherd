version: '3.7'

services:

  test-service:
    # hostname: ${IMAGE_REPO:-host}-nsfw-container
    # image: ${AWS_ACCOUNT_ID:-acc}.dkr.ecr.${AWS_DEFAULT_REGION:-reg}.amazonaws.com/shepherd:nsfw
    build: 
      context: .
      dockerfile: Dockerfile.test
      target: tests
    environment: 
      DB_HOST: pgdb-test
      # SLACK_WEBHOOK: ${SLACK_WEBHOOK:-}
      HOST_URL: ${HOST_URL:-https://arweave.net}
      
      SQS_LOCAL: 'yes'
      AWS_ACCESS_KEY_ID: minioroot
      AWS_SECRET_ACCESS_KEY: minioroot
      AWS_SQS_INPUT_QUEUE: http://sqs-local:9324/000000000000/shepherd-s3-events
      AWS_INPUT_BUCKET: shepherd-input-mod-local
      S3_LOCAL: 'yes'
      S3_LOCAL_ENDPOINT: http://s3-local:9000
      HTTP_API_URL: http://http-api:84/postupdate
      
    depends_on:
      - pgdb-test
      - localbridge
      - sqs-local
      - s3-local
      - http-api

  pgdb-test:
    extends:
      file: ../../docker-compose.test.yml
      service: pgdb-test
  sqs-local:
    extends:
      file: ../../docker-compose.test.yml
      service: sqs-local
  s3-local:
    extends:
      file: ../../docker-compose.test.yml
      service: s3-local
  http-api:
    extends:
      file: ../../docker-compose.yml
      service: http-api
    environment:
      DB_HOST: pgdb-test
  shep-runner:
    extends:
      file: ../../docker-compose.test.yml
      service: test

  localbridge:
    build: 
      context: ../../infra-local/localbridge
    environment:
      AWS_ACCESS_KEY_ID: dummy
      AWS_SECRET_ACCESS_KEY: dummytoo
    depends_on:
      - sqs-local
      - s3-local
    deploy:
      restart_policy: 
        condition: always